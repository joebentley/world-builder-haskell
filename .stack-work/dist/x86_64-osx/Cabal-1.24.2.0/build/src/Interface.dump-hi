
==================== FINAL INTERFACE ====================
2017-11-07 08:29:15.316949 UTC

interface world-builder-haskell-0.1.0.0-KjZXUPfQvPa5KF56vbnWWK:Interface 8002
  interface hash: d998b0274a70a6db3a99080a50bfeb97
  ABI hash: 07c3d8eea4ee3ae1288d0a5d5fbbf771
  export-list hash: dfad4581e14eb769c25557de7b7a9e8f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Interface.apply
  Interface.displayRoomList
  Interface.emptyState
  Interface.loop
  Interface.parse
  Interface.State{Interface.State currentRoom world}
module dependencies: World
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00*
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text f7d3d648ffeef1043fe2e522e7e66c1b
import  -/  World 445bc605052d04934c771ec938ad275a
  exports: 28404324800c0b1e5075df388b414d07
  Index 12be00b9980ce7a94d3ab107353bf425
  Room 58d87cf4e2365b5c96f45c4d6db1e402
  World 571d49c072cac2ee9573bbb36813de4d
  addRoom 11c13a265345bb3ff86f1b26bf9a5a07
  attrs c764a25125e2212ba77153cab64cd9d0
  changeRoomAttribute 62604e556786128fa07cde6996af1e05
  emptyWorld 08cac3574d3ca31c7b248bb21bf38269
  exits 8d3366608799121c1e054c5d9aa75272
  getNextRoomID 6ce064ffe0da97a64aa2de13f6fc9fce
  getRoomByID 2b5c6e0307c605506b90f546b7f59265
  name 453d686bd35b98d3423c9ac9349fc38b
  roomID 4a7b3d666b1763a597429a2c1e87c8f3
  rooms bc1f1d0abe082f6ce9e8b0954aae9ccc
3cadd38660e646fc91079b8ec4a51688
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
fd3e3cd6fd4db005754a32460d1f6211
  $tc'State :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3843789613417163649##
                   13745889624978034510##
                   Interface.$trModule
                   Interface.$tc'State1) -}
5db537129c55c04e8f5f756c56275042
  $tc'State1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'State"#) -}
912a9835804e6d00a0921d772129ce19
  $tcState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4297293469466031923##
                   2939254798704369648##
                   Interface.$trModule
                   Interface.$tcState1) -}
cc079fdc13dff8d857cb9ecc09a5d545
  $tcState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "State"#) -}
0c936bb3a75897589edd49c87e70cc53
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Interface.$trModule2
                   Interface.$trModule1) -}
f96c3a34d5c34ba73950162b2595cb68
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interface"#) -}
f7a56ee5736b0a8b9bd77abe8337fc5e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "world-builder-haskell-0.1.0.0-KjZXUPfQvPa5KF56vbnWWK"#) -}
2d22dbd6572afd3c2d5a197fc6e44f41
  $wdisplayRoomList ::
    Data.Map.Base.Map World.Index World.Room -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Map.Base.Map World.Index World.Room) ->
                 Interface.displayRoomList_go10
                   (GHC.Types.[] @ GHC.Types.Char)
                   ww) -}
a92ac2e3f9c2559b0e79dd786caa8299
  data State
    = State {currentRoom :: World.Index, world :: World.World}
9f8137e0a1806c8f614fe651666af265
  apply ::
    (World.World -> World.World) -> Interface.State -> Interface.State
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (f :: World.World -> World.World) (ds :: Interface.State) ->
                 case ds of wild { Interface.State c w ->
                 Interface.State c (f w) }) -}
8cd3bb8e90d12a1ec2fad26117720fa1
  currentRoom :: Interface.State -> World.Index
  RecSel Left Interface.State
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interface.State) ->
                 case ds of wild { Interface.State ds1 ds2 -> ds1 }) -}
586a21fe84d33570db37ab1213ba82a7
  displayRoomList :: World.World -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: World.World) ->
                 case w of ww { World.World ww1 ->
                 Interface.$wdisplayRoomList ww1 }) -}
1f997b6a7ef8c8366f70e6c0a320d3b8
  displayRoomList_go10 ::
    [GHC.Types.Char]
    -> Data.Map.Base.Map GHC.Types.Int World.Room -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,1*U><S,1*U> -}
3d5aa9ecb1ad13bd3b87c769e5eea93c
  emptyState :: Interface.State
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Interface.State
                   Interface.emptyState1
                   World.emptyWorld) -}
c87d2eb8e55ddd1a7bbfca44fe69d507
  emptyState1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5414ca42dded5a0fbea1cb21183da7d5
  loop :: Interface.State -> GHC.Types.IO Interface.State
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.loop1
                  `cast`
                (<Interface.State>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Interface.State>_R)) -}
7b9f3dd76ce5dae085752a53675c2a9f
  loop1 ::
    Interface.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Interface.State #)
  {- Arity: 2, Strictness: <L,U(U(U),U(U))><S,U> -}
d480258ce6d4cd31f0449cee57622382
  parse ::
    Interface.State -> GHC.Base.String -> GHC.Types.IO Interface.State
  {- Arity: 3, Strictness: <L,U(U(U),U(U))><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Interface.parse1
                  `cast`
                (<Interface.State>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Interface.State>_R)) -}
1953d8d84bddcfde912d07a14c9ed856
  parse1 ::
    Interface.State
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Interface.State #)
  {- Arity: 3, Strictness: <L,U(U(U),U(U))><S,U><S,U> -}
877cda00b3001e969d640776113c18fe
  world :: Interface.State -> World.World
  RecSel Left Interface.State
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Interface.State) ->
                 case ds of wild { Interface.State ds1 ds2 -> ds2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

